" light version of .vimrc with no plugins or external scripts

set nocompatible
syntax on
filetype plugin indent on
let mapleader = ','

""""" Vim Options
set autoindent smartindent              " Automatically indent lines
set autoread                            " Autoread file if changed outside vim
set backspace=indent,eol,start          " Better backspace
set expandtab tabstop=4 shiftwidth=4    " Expand tabs into 4 spaces
set hidden                              " Allow buffers to be backgrounded without being unloaded
set hlsearch                            " Highlight all search results
set incsearch                           " Highlight search results as they are typed
set ignorecase                          " Ignore case when searching
set laststatus=2                        " Always show status line
set mouse=a                             " Allow mouse in all modes
set noshowmode                          " Don't show vim mode. Will be shown by Airline
set nostartofline                       " Don't return cursor to first column after commands
set number                              " Show line numbers
set pastetoggle=<C-p>                   " Toggle paste mode
set scrolloff=2                         " Always leave 2 lines below and above cursor
set showcmd                             " Show command as it's being typed
set showmatch                           " Show matching brackets
set splitright                          " Place new windows to the right of the current one
set virtualedit=onemore                 " Allow the cursor to go one character past the end of the line
set visualbell t_vb=                    " Turn off bell
set wildmenu                            " Vistual completion for files and commands
set whichwrap="b,s,h,l,<,>,[,]"         " Allow arrow keys, h/l, backspace, space to wrap lines
if v:version >= 704
    set wildignorecase                  " Ignore case when completing file names
    set undofile                        " Store undo history after closing a file
    set undodir=~/logs/vim_undo_hist    " Where to store undo history files
endif

""""" Key Mappings
" Move between screen lines when line is wrapped
nnoremap j gj
nnoremap k gk
" Page up/down
nnoremap <C-K> <C-B>
inoremap <C-K> <C-O><C-B>
nnoremap <C-J> <C-F>
inoremap <C-J> <C-O><C-F>
"Half page up/down
nnoremap <S-J> <C-D>
nnoremap <S-K> <C-U>
"Beginning and end of line
nnoremap <C-H> 0
inoremap <C-H> <C-O>0
nnoremap <C-L> $
inoremap <C-L> <C-O>$

" Commands from insert mode
inoremap <C-S> <C-O>

" jump between windows in insert mode
inoremap <C-w> <C-O><C-w> 

" Emacs bindings in command line mode
cnoremap <C-a> <home>
cnoremap <C-e> <end>

"keep search matches in the middle of the window
nnoremap n nzz
nnoremap N Nzz

"show full path of file
nnoremap <C-G> 1<C-G> 
""""" Color scheme

augroup ColorScheme
    autocmd!
    autocmd FileType * :colo mycolors
    autocmd FileType vim :colo vim.mycolors
augroup END

""""" Commands
command! -nargs=+ ToUpper :%s/\(<args>\)/\U\1/g
command! -nargs=+ ToLower :%s/\(<args>\)/\L\1/g

" TabsOff -> Tabs converted to spaces
" TabsOn -> Tabs stay as Tabs
command! -nargs=0 TabsToggle :set invexpandtab
command! -nargs=0 TabsOn :set noexpandtab
command! -nargs=0 TabsOff :set expandtab

" Ugh
command! W :w
command! Q :q

""""" autosave
" Save file (if it is writable and exists in file system) after 5 seconds of inactivity
set nobackup
set noswapfile
set updatetime=5000
function! SetAutoSave()
    if @% != "" && filewritable(@%) && ! &readonly && &modifiable
        autocmd CursorHold,CursorHoldI <buffer> write
    endif
endfunction
augroup SetAutoSave
    autocmd!
    autocmd BufRead,BufNewFile * call SetAutoSave()
augroup END

""""" autoformatting 
set formatoptions+=r   "insert comment leader after hitting <Enter>
set formatoptions-=t   " DO NOT autowrap long text
set formatoptions+=o   " insert comment leader after hitting 'o' or 'O'
set formatoptions-=a   " DO NOT auto format paragraphs
set formatoptions+=n   " recognize numbered lists

"""""" set filetype
augroup SetFileType
    autocmd!
    autocmd BufRead,BufEnter ?Rprofile set filetype=r 
    autocmd BufRead,BufEnter ?lscolors,?functions,?alias,?prompt set filetype=sh 
augroup END

